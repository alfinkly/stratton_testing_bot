from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from database.models import User
from services.telegram.misc.keyboards import Keyboards

router = Router()


@router.message(F.text == "–ì–ª–∞–≤–Ω–∞—è")
@router.message(Command("start"))
async def home(message: Message, user: User):
    # TODO –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç—ã –Ω–∞ Texts
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é @{message.from_user.username}üôÇü§ùüèº "
        f"\n–Ø –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ Stratton.kz"
        f"\n–ü–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ üëá",
        reply_markup=Keyboards.home(user=user, add_remove_exam=True if user.testing_at else False)
    )


@router.message(F.text == "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def info(message: Message, user: User):
    await message.answer(f"""üè¨  –ö–æ–º–ø–∞–Ω–∏—è Stratton.kz

ü§ñ –ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ–º –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º —Ä–æ–±–æ—Ç–∏–∑–∞—Ü–∏–∏, –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —á–∞—Ç-–±–æ—Ç–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤.

‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏ <a href="https://stratton.taplink.ws/p/o-kompanii/">—Ç—É—Ç</a>""",
                         reply_markup=Keyboards.home(user=user),
                         parse_mode=ParseMode.HTML
                         )


@router.message(F.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contact(message: Message, user: User):
    await message.answer(
        f"–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏ –ø–∏—à–∏—Ç–µ ‚úçÔ∏è"
        f"\n@alfinkly",
        reply_markup=Keyboards.home(user=user)
    )


@router.message(F.text == "alfinkly")
async def info(message: Message):
    await message.answer(f"–ú–æ–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∂–∏–≤?")


@router.callback_query(F.data == "nothing")
async def nothing(callback: CallbackQuery):
    await callback.answer()